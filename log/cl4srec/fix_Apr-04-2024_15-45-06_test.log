2024-04-04 15:45:06,775 - {'optimizer': {'name': 'adam', 'lr': 0.001, 'final_lr': 1e-06, 'weight_decay': 0}, 'train': {'experiment_name': 'test', 'model_test_run': True, 'test_run_sample_no': 100, 'weighted_loss_fn': True, 'epoch': 3, 'batch_size': 64, 'save_model': True, 'log_loss': True, 'test_step': 1, 'reproducible': True, 'seed': 12, 'tensorboard': True, 'conf_mat': True, 'ssl': False, 'gradient_accumulation': False, 'accumulation_steps': 4, 'early_stop': False, 'parameter_class_weights_path': './datasets/sequential/fix/parameters/param.pkl', 'parameter_label_mapping_path': './datasets/sequential/fix/parameters/label_mapping.pkl'}, 'test': {'metrics': ['precision', 'recall', 'f1score', 'accuracy'], 'k': [1, 2, 3], 'batch_size': 64, 'train_eval': True, 'save_path': '2024-04-04_15-44 test', 'tensorboard': <torch.utils.tensorboard.writer.SummaryWriter object at 0x7f9818122250>}, 'data': {'type': 'sequential', 'name': 'fix', 'seq_aug': False, 'dynamic_context_window_length': 100, 'user_num': 100, 'item_num': 23, 'dynamic_context_feat_num': 10, 'static_context_feat_num': 7, 'static_context_features': ['month', 'weekday', 'hour', 'seatbelt_codriver', 'seatbelt_rear_l', 'seatbelt_rear_r', 'street_category'], 'dense_static_context_features': ['distance_driven_benchmark', 'soc', 'time_second'], 'dynamic_context_features': ['KBI_speed', 'altitude', 'avg_irradiation', 'latitude', 'light_sensor_front', 'light_sensor_rear', 'longitude', 'steering_speed', 'temperature_in', 'temperature_out'], 'static_context_max': [12, 6, 23, 1, 1, 1, 7]}, 'model': {'name': 'cl4srec', 'context_encoder': 'tempcnn', 'tcn_num_channels': [80, 50, 25], 'tcn_kernel_size': 3, 'interaction_encoder': 'sasrec', 'dropout_rate_trans': 0.3, 'dropout_rate_tcn': 0.25, 'dropout_rate_fc_tcn': 0.4, 'dropout_rate_fc_trans': 0.5, 'dropout_rate_fc_concat': 0.3, 'dropout_rate_fc_static': 0.1, 'n_layers': 2, 'embedding_size': 64, 'n_heads': 2, 'max_seq_len': 10, 'lmd': 0.1, 'tau': 1, 'encoder_combine': 'concat'}, 'lstm': {'hidden_size': 64, 'num_layers': 2}, 'tune': {'enable': False, 'hyperparameters': ['dropout_rate', 'lmd', 'tau'], 'dropout_rate': [0.1, 0.2, 0.3], 'lmd': [0.05, 0.1, 0.2], 'tau': [0.5, 0.7, 0.9]}, 'device': 'cpu'}
2024-04-04 15:45:06,981 - Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.FloatTensor instead (while checking arguments for embedding)
Traceback (most recent call last):
  File "/Volumes/Workspace/In-Car CARSI/carsii/trainer/utils.py", line 15, in wrapper
    return func(*args, **kwargs)
  File "/Volumes/Workspace/In-Car CARSI/carsii/trainer/trainer.py", line 149, in train
    self.train_epoch(model, epoch_idx)
  File "/Volumes/Workspace/In-Car CARSI/carsii/trainer/trainer.py", line 95, in train_epoch
    loss, loss_dict = model.cal_loss(batch_data)
  File "/Volumes/Workspace/In-Car CARSI/carsii/models/sequential/cl4srec.py", line 181, in cal_loss
    seq_output = self.forward(batch_seqs, batch_dynamic_context, batch_static_context, batch_dense_static_context)
  File "/Volumes/Workspace/In-Car CARSI/carsii/models/sequential/cl4srec.py", line 167, in forward
    static_context = self.static_embedding(batch_static_context, batch_dense_static_context)
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Volumes/Workspace/In-Car CARSI/carsii/models/static_context_encoder.py", line 31, in forward
    embedded = [emb(x[:, i]) for i, emb in enumerate(self.embedding_layers)]
  File "/Volumes/Workspace/In-Car CARSI/carsii/models/static_context_encoder.py", line 31, in <listcomp>
    embedded = [emb(x[:, i]) for i, emb in enumerate(self.embedding_layers)]
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/modules/sparse.py", line 163, in forward
    return F.embedding(
  File "/Users/sreeragvn/miniconda3/envs/carsii/lib/python3.8/site-packages/torch/nn/functional.py", line 2237, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.FloatTensor instead (while checking arguments for embedding)
